// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a ViewRandomImage 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ViewRandomImage />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        " ",
        <p>
           View random image
        </p>,
        <button
          onClick={[Function]}
        >
           Next
        </button>,
        <div>
          <img
            src={null}
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      " ",
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " View random image",
        },
        "ref": null,
        "rendered": " View random image",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": " Next",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": " Next",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <img
            src={null}
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "src": null,
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          " ",
          <p>
             View random image
          </p>,
          <button
            onClick={[Function]}
          >
             Next
          </button>,
          <div>
            <img
              src={null}
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        " ",
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " View random image",
          },
          "ref": null,
          "rendered": " View random image",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": " Next",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": " Next",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <img
              src={null}
            />,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "src": null,
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
